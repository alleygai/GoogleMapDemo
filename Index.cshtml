<style>
    .infoDiv {
        height: 200px;
        width: 300px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        background-color: white;
    }

    .DivZtop {
        height: 600px;
        float: left;
        margin: 0;
        position: absolute;
        z-index: 10;
        margin-top: 15px;
        margin-left: 15px;
    }

    .DivZBottom {
        width: 100%;
        height: 600px;
        float: right;
        margin: 0;
    }

    #exSlider .slider-selection {
        background: #BABABA;
    }
</style>

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true&libraries=places"></script>

@*<div id="myCarousel" class="carousel slide" data-ride="carousel">
        <ol class="carousel-indicators">
            <li data-target="#myCarousel" data-slide-to="0" class=""></li>
            <li data-target="#myCarousel" data-slide-to="1" class="active"></li>
            <li data-target="#myCarousel" data-slide-to="2" class=""></li>
        </ol>
        <div class="carousel-inner" role="listbox">
            <div class="item">
                <img class="first-slide" src="../../Content/camo3.jpg" alt="First slide">
                <div class="container">
                    <div class="carousel-caption">
                        <h1>Example headline.</h1>
                        <p>Note: If you're viewing this page via a <code>file://</code> URL, the "next" and "previous" Glyphicon buttons on the left and right might not load/display properly due to web browser security rules.</p>
                        <p><a class="btn btn-lg btn-primary" href="#" role="button">Sign up today</a></p>
                    </div>
                </div>
            </div>
            <div class="item active">
                <img class="second-slide" src="../../Content/camo3.jpg" alt="Second slide">
                <div class="container">
                    <div class="carousel-caption">
                        <h1>Another example headline.</h1>
                        <p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>
                        <p><a class="btn btn-lg btn-primary" href="#" role="button">Learn more</a></p>
                    </div>
                </div>
            </div>
            <div class="item">
                <img class="third-slide" src="../../Content/camo3.jpg" alt="Third slide">
                <div class="container">
                    <div class="carousel-caption">
                        <h1>One more for good measure.</h1>
                        <p>Cras justo odio, dapibus ac facilisis in, egestas eget quam. Donec id elit non mi porta gravida at eget metus. Nullam id dolor id nibh ultricies vehicula ut id elit.</p>
                        <p><a class="btn btn-lg btn-primary" href="#" role="button">Browse gallery</a></p>
                    </div>
                </div>
            </div>
        </div>
        <a class="left carousel-control" href="#myCarousel" role="button" data-slide="prev">
            <span class="glyphicon glyphicon-chevron-left" aria-hidden="true"></span>
            <span class="sr-only">Previous</span>
        </a>
        <a class="right carousel-control" href="#myCarousel" role="button" data-slide="next">
            <span class="glyphicon glyphicon-chevron-right" aria-hidden="true"></span>
            <span class="sr-only">Next</span>
        </a>
    </div>*@
<div class="row">
    <div class="col-md-10">
        <div class="DivZtop">
            <form class="form-inline">
                <div class="form-group">
                    <input id="startvalue" style="opacity:0.8;" placeholder="起始点" class="form-control" />
                </div>
                <div class="form-group">
                    <input id="midvalue" style="opacity:0.8;" placeholder="换乘点" class="form-control" />
                </div>
                <div class="form-group">
                    <input id="endvalue" style="opacity:0.8;" placeholder="终点" class="form-control" />
                </div>
                @*<div>
                        <strong>Mode of Travel: </strong>
                        <select id="selectedTravelMode" onchange="calcRoute();">
                            <option value="DRIVING">Driving</option>
                            <option value="WALKING">Walking</option>
                            <option value="BICYCLING">Bicycling</option>
                        </select>
                    </div>*@
                @*<input id="SearchBtn" type="button" value="Search" class="controls" onclick="calcRoute();" />*@
                @*<div id="directionpanel" style="overflow-x:hidden;overflow-y:auto;height:400px;"></div>*@

            </form>
        </div>
        <div id="map_canvas" class="DivZBottom"></div>
    </div>
    <div class="col-md-2">
        <input id="ex1" data-slider-id='exSlider' type="text" data-slider-min="1" data-slider-max="100" data-slider-step="1" data-slider-value="50" />
        <input id="ex2" data-slider-id='exSlider' type="text" data-slider-min="1" data-slider-max="100" data-slider-step="1" data-slider-value="50" />
        <input id="ex3" data-slider-id='exSlider' type="text" data-slider-min="1" data-slider-max="100" data-slider-step="1" data-slider-value="50" />
        <input id="ex4" data-slider-id='exSlider' type="text" data-slider-min="1" data-slider-max="100" data-slider-step="1" data-slider-value="50" />
        <input id="ex5" data-slider-id='exSlider' type="text" data-slider-min="1" data-slider-max="100" data-slider-step="1" data-slider-value="50" />
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        Initialize();

        $('#ex1').slider({
            formatter: function (value) {
                return 'Current value: ' + value;
            }
        });
        $('#ex2').slider({
            formatter: function (value) {
                return 'Current value: ' + value;
            }
        });
        $('#ex3').slider({
            formatter: function (value) {
                return 'Current value: ' + value;
            }
        });
        $('#ex4').slider({
            formatter: function (value) {
                return 'Current value: ' + value;
            }
        });
        $('#ex5').slider({
            formatter: function (value) {
                return 'Current value: ' + value;
            }
        });
    });

    // Where all the fun happens
    function Initialize() {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
        var Liverpool = new google.maps.LatLng(53.408841, -2.981397);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 14,
            center: Liverpool,
            mapTypeId: google.maps.MapTypeId.ROADMAP
            //mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        var defaultBounds = new google.maps.LatLngBounds(
            new google.maps.LatLng(-33.8902, 151.1759),
            new google.maps.LatLng(-33.8474, 151.2631));
        map.fitBounds(defaultBounds);

        //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var startValue = (document.getElementById('startvalue'));
        var endValue = (document.getElementById('endvalue'));

        var startSearchBox = new google.maps.places.SearchBox(startValue);
        var endSearchBox = new google.maps.places.SearchBox(endValue);

        markers = [];

        // [START region_getplaces]
        // Listen for the event fired when the user selects an item from the
        // pick list. Retrieve the matching places for that item.
        google.maps.event.addListener(startSearchBox, 'places_changed', function () {
            var places = startSearchBox.getPlaces();

            if (places.length == 0) {
                return;
            }
            for (var i = 0, marker; marker = markers[i]; i++) {
                marker.setMap(null);
            }

            // For each place, get the icon, place name, and location.
            markers = [];
            var bounds = new google.maps.LatLngBounds();
            for (var i = 0, place; place = places[i]; i++) {
                var image = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25)
                };

                // Create a marker for each place.
                var marker = new google.maps.Marker({
                    map: map,
                    icon: image,
                    title: place.name,
                    position: place.geometry.location
                });

                markers.push(marker);

                bounds.extend(place.geometry.location);
            }

            map.fitBounds(bounds);
        });

        google.maps.event.addListener(endSearchBox, 'places_changed', function () {
            var places = endSearchBox.getPlaces();

            if (places.length == 0) {
                return;
            }
            for (var i = 0, marker; marker = markers[i]; i++) {
                marker.setMap(null);
            }

            // For each place, get the icon, place name, and location.
            markers = [];
            var bounds = new google.maps.LatLngBounds();
            for (var i = 0, place; place = places[i]; i++) {
                var image = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25)
                };

                // Create a marker for each place.
                var marker = new google.maps.Marker({
                    map: map,
                    icon: image,
                    title: place.name,
                    position: place.geometry.location
                });

                markers.push(marker);

                bounds.extend(place.geometry.location);
            }

            map.fitBounds(bounds);
            calcRoute();
        });
        // [END region_getplaces]

        // Bias the SearchBox results towards places that are within the bounds of the
        // current map's viewport.
        google.maps.event.addListener(map, 'bounds_changed', function () {
            var bounds = map.getBounds();
            startSearchBox.setBounds(bounds);
            endSearchBox.setBounds(bounds);
        });

        stepDisplay = new google.maps.InfoWindow();
        directionsDisplay = new google.maps.DirectionsRenderer();
        var latlng = new google.maps.LatLng(-34.397, 150.644);

        directionsDisplay.setMap(map);
        //directionsDisplay.setPanel(document.getElementById('directionpanel'));
    }

    function calcRoute() {
        var directionsService = new google.maps.DirectionsService();
        var start = document.getElementById('startvalue').value;
        var end = document.getElementById('endvalue').value;
        var request = {
            origin: start,
            destination: end,
            travelMode: google.maps.TravelMode.TRANSIT,
            unitSystem: google.maps.UnitSystem.METRIC
        };
        directionsService.route(request, function (result, status) {
            if (status == google.maps.DirectionsStatus.OK) {
                directionsDisplay.setDirections(result);
                showSteps(result);
            }
        });
    }

    function showSteps(directionResult) {
        var myRoute = directionResult.routes[0].legs[0];

        for (var i = 0; i < myRoute.steps.length; i++) {
            var innermarker = new google.maps.Marker({
                position: myRoute.steps[i].start_point,
                map: map
            });
            attachInstructionText(innermarker, myRoute.steps[i].instructions);
            markers[i] = innermarker;
        }
    }

    function attachInstructionText(waymarker, text) {
        google.maps.event.addListener(waymarker, 'click', function () {
            stepDisplay.setContent(text);
            stepDisplay.open(map, waymarker);
        });
    }
</script>
