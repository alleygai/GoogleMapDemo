<style>
    .DivZBottom {
        width: 100%;
        height: 500px;
        float: right;
        margin: 0;
    }
</style>

<div class="container" style="margin-top:20px;">
    <div class="col-md-6">
        <div style="background:#0069B4; padding-top:30px;padding-bottom:10px;padding-left:20px;padding-right:20px;">
            <form class="form-group">
                <div class="form-group">
                    <label for="startvalue" style="color:white;">起点</label>
                    <input id="startvalue" placeholder="起始" class="form-control" />
                </div>
                <div class="form-group">
                    <label for="endvalue" style="color:white;">终点</label>
                    <input id="endvalue" placeholder="终点" class="form-control" />
                </div>
                <div class="form-group">
                    <label style="color:white;" for="datepickerstart">
                        出发日期:
                        <input type="text" id="datepickerstart" class="form-control" style="max-width:70%;">
                    </label>
                    <label style="color:white;" for="datepickerend">
                        返程日期:
                        <input type="text" id="datepickerend" class="form-control" style="max-width:70%;">
                    </label>
                </div>
            </form>
        </div>
        <div>
            <h3>选择您的偏好</h3>
            <table class="table">
                <tbody>
                    <tr>
                        <td style="width:15%">预算</td>
                        <td><div id="slider1"></div></td>
                        <td style="width:30%">文化</td>
                        <td><div id="slider2"></div></td>
                    </tr>
                    <tr>
                        <td style="width:15%">历史</td>
                        <td><div id="slider3"></div></td>
                        <td style="width:15%">体育</td>
                        <td><div id="slider4"></div></td>
                    </tr>
                    <tr>
                        <td style="width:15%">自然景观</td>
                        <td><div id="slider5"></div></td>
                        <td style="width:15%">购物</td>
                        <td><div id="slider6"></div></td>
                    </tr>
                </tbody>
            </table>
        </div>
        <div style="background:#0069B4; padding:2px;">
            <input style="  background: #fff;
  border: 0;
  font-size: 1.6em;
  text-align: center;
  color: #0069b4;
  padding: 10px;
  margin: 5px;
  width:51px;" value="Go" />
        </div>
    </div>
    <div class="col-md-6">
        <div id="map_canvas" class="DivZBottom"></div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        Initialize();

        $(function () {
            $("#slider1").slider({ step: 5 });
            $("#slider2").slider({ step: 5 });
            $("#slider3").slider({ step: 5 });
            $("#slider4").slider({ step: 5 });
            $("#slider5").slider({ step: 5 });
            $("#slider6").slider({ step: 5 });
        });

        $(function () {
            $("#datepickerstart").datepicker({
            });
            $("#datepickerend").datepicker({
            });
        });
    });

    function Initialize() {

        // Google has tweaked their interface somewhat - this tells the api to use that new UI
        google.maps.visualRefresh = true;
        var Liverpool = new google.maps.LatLng(53.408841, -2.981397);

        // These are options that set initial zoom level, where the map is centered globally to start, and the type of map to show
        var mapOptions = {
            zoom: 14,
            center: Liverpool,
            mapTypeId: google.maps.MapTypeId.ROADMAP
            //mapTypeId: google.maps.MapTypeId.G_NORMAL_MAP
        };

        // This makes the div with id "map_canvas" a google map
        map = new google.maps.Map(document.getElementById("map_canvas"), mapOptions);

        var defaultBounds = new google.maps.LatLngBounds(
            new google.maps.LatLng(-33.8902, 151.1759),
            new google.maps.LatLng(-33.8474, 151.2631));
        map.fitBounds(defaultBounds);

        //map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

        var startValue = (document.getElementById('startvalue'));
        var endValue = (document.getElementById('endvalue'));

        var startSearchBox = new google.maps.places.SearchBox(startValue);
        var endSearchBox = new google.maps.places.SearchBox(endValue);

        markers = [];

        // [START region_getplaces]
        // Listen for the event fired when the user selects an item from the
        // pick list. Retrieve the matching places for that item.
        google.maps.event.addListener(startSearchBox, 'places_changed', function () {
            var places = startSearchBox.getPlaces();

            if (places.length == 0) {
                return;
            }
            for (var i = 0, marker; marker = markers[i]; i++) {
                marker.setMap(null);
            }

            // For each place, get the icon, place name, and location.
            markers = [];
            var bounds = new google.maps.LatLngBounds();
            for (var i = 0, place; place = places[i]; i++) {
                var image = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25)
                };

                // Create a marker for each place.
                var marker = new google.maps.Marker({
                    map: map,
                    icon: image,
                    title: place.name,
                    position: place.geometry.location
                });

                markers.push(marker);

                bounds.extend(place.geometry.location);
            }

            map.fitBounds(bounds);
        });

        google.maps.event.addListener(endSearchBox, 'places_changed', function () {
            var places = endSearchBox.getPlaces();

            if (places.length == 0) {
                return;
            }
            for (var i = 0, marker; marker = markers[i]; i++) {
                marker.setMap(null);
            }

            // For each place, get the icon, place name, and location.
            markers = [];
            var bounds = new google.maps.LatLngBounds();
            for (var i = 0, place; place = places[i]; i++) {
                var image = {
                    url: place.icon,
                    size: new google.maps.Size(71, 71),
                    origin: new google.maps.Point(0, 0),
                    anchor: new google.maps.Point(17, 34),
                    scaledSize: new google.maps.Size(25, 25)
                };

                // Create a marker for each place.
                var marker = new google.maps.Marker({
                    map: map,
                    icon: image,
                    title: place.name,
                    position: place.geometry.location
                });

                markers.push(marker);

                bounds.extend(place.geometry.location);
            }

            map.fitBounds(bounds);
            calcRoute();
        });
        // [END region_getplaces]

        // Bias the SearchBox results towards places that are within the bounds of the
        // current map's viewport.
        google.maps.event.addListener(map, 'bounds_changed', function () {
            var bounds = map.getBounds();
            startSearchBox.setBounds(bounds);
            endSearchBox.setBounds(bounds);
        });

        stepDisplay = new google.maps.InfoWindow();
        directionsDisplay = new google.maps.DirectionsRenderer();
        var latlng = new google.maps.LatLng(-34.397, 150.644);

        directionsDisplay.setMap(map);
        //directionsDisplay.setPanel(document.getElementById('directionpanel'));
    }

    function calcRoute() {
        var directionsService = new google.maps.DirectionsService();
        var start = document.getElementById('startvalue').value;
        var end = document.getElementById('endvalue').value;
        var request = {
            origin: start,
            destination: end,
            travelMode: google.maps.TravelMode.TRANSIT,
            unitSystem: google.maps.UnitSystem.METRIC
        };
        directionsService.route(request, function (result, status) {
            if (status == google.maps.DirectionsStatus.OK) {
                directionsDisplay.setDirections(result);
                showSteps(result);
            }
        });
    }

    function showSteps(directionResult) {
        var myRoute = directionResult.routes[0].legs[0];

        for (var i = 0; i < myRoute.steps.length; i++) {
            var innermarker = new google.maps.Marker({
                position: myRoute.steps[i].start_point,
                map: map
            });
            attachInstructionText(innermarker, myRoute.steps[i].instructions);
            markers[i] = innermarker;
        }
    }

    function attachInstructionText(waymarker, text) {
        google.maps.event.addListener(waymarker, 'click', function () {
            stepDisplay.setContent(text);
            stepDisplay.open(map, waymarker);
        });
    }
</script>
